// Generated by view binder compiler. Do not edit!
package com.example.meteoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.example.meteoapp.R;
import com.github.mikephil.charting.charts.CombinedChart;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final ImageView bgImage;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final LinearLayout headerContainer;

  @NonNull
  public final LinearLayout infoContainer;

  @NonNull
  public final NavigationView navigationView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvHumidityInterpretation;

  @NonNull
  public final TextView tvHumidityValue;

  @NonNull
  public final TextView tvPollutionInterpretation;

  @NonNull
  public final TextView tvPollutionValue;

  @NonNull
  public final TextView tvPressureInterpretation;

  @NonNull
  public final TextView tvPressureValue;

  @NonNull
  public final TextView tvRainInterpretation;

  @NonNull
  public final TextView tvRainValue;

  @NonNull
  public final TextView tvTemp;

  @NonNull
  public final TextView tvUvInterpretation;

  @NonNull
  public final TextView tvUvValue;

  @NonNull
  public final TextView tvWeatherMain;

  @NonNull
  public final CombinedChart uvChart;

  @NonNull
  public final LottieAnimationView weatherAnimation;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull ImageView bgImage,
      @NonNull DrawerLayout drawerLayout, @NonNull LinearLayout headerContainer,
      @NonNull LinearLayout infoContainer, @NonNull NavigationView navigationView,
      @NonNull Toolbar toolbar, @NonNull TextView tvHumidityInterpretation,
      @NonNull TextView tvHumidityValue, @NonNull TextView tvPollutionInterpretation,
      @NonNull TextView tvPollutionValue, @NonNull TextView tvPressureInterpretation,
      @NonNull TextView tvPressureValue, @NonNull TextView tvRainInterpretation,
      @NonNull TextView tvRainValue, @NonNull TextView tvTemp, @NonNull TextView tvUvInterpretation,
      @NonNull TextView tvUvValue, @NonNull TextView tvWeatherMain, @NonNull CombinedChart uvChart,
      @NonNull LottieAnimationView weatherAnimation) {
    this.rootView = rootView;
    this.bgImage = bgImage;
    this.drawerLayout = drawerLayout;
    this.headerContainer = headerContainer;
    this.infoContainer = infoContainer;
    this.navigationView = navigationView;
    this.toolbar = toolbar;
    this.tvHumidityInterpretation = tvHumidityInterpretation;
    this.tvHumidityValue = tvHumidityValue;
    this.tvPollutionInterpretation = tvPollutionInterpretation;
    this.tvPollutionValue = tvPollutionValue;
    this.tvPressureInterpretation = tvPressureInterpretation;
    this.tvPressureValue = tvPressureValue;
    this.tvRainInterpretation = tvRainInterpretation;
    this.tvRainValue = tvRainValue;
    this.tvTemp = tvTemp;
    this.tvUvInterpretation = tvUvInterpretation;
    this.tvUvValue = tvUvValue;
    this.tvWeatherMain = tvWeatherMain;
    this.uvChart = uvChart;
    this.weatherAnimation = weatherAnimation;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bgImage;
      ImageView bgImage = ViewBindings.findChildViewById(rootView, id);
      if (bgImage == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.headerContainer;
      LinearLayout headerContainer = ViewBindings.findChildViewById(rootView, id);
      if (headerContainer == null) {
        break missingId;
      }

      id = R.id.infoContainer;
      LinearLayout infoContainer = ViewBindings.findChildViewById(rootView, id);
      if (infoContainer == null) {
        break missingId;
      }

      id = R.id.navigationView;
      NavigationView navigationView = ViewBindings.findChildViewById(rootView, id);
      if (navigationView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvHumidityInterpretation;
      TextView tvHumidityInterpretation = ViewBindings.findChildViewById(rootView, id);
      if (tvHumidityInterpretation == null) {
        break missingId;
      }

      id = R.id.tvHumidityValue;
      TextView tvHumidityValue = ViewBindings.findChildViewById(rootView, id);
      if (tvHumidityValue == null) {
        break missingId;
      }

      id = R.id.tvPollutionInterpretation;
      TextView tvPollutionInterpretation = ViewBindings.findChildViewById(rootView, id);
      if (tvPollutionInterpretation == null) {
        break missingId;
      }

      id = R.id.tvPollutionValue;
      TextView tvPollutionValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPollutionValue == null) {
        break missingId;
      }

      id = R.id.tvPressureInterpretation;
      TextView tvPressureInterpretation = ViewBindings.findChildViewById(rootView, id);
      if (tvPressureInterpretation == null) {
        break missingId;
      }

      id = R.id.tvPressureValue;
      TextView tvPressureValue = ViewBindings.findChildViewById(rootView, id);
      if (tvPressureValue == null) {
        break missingId;
      }

      id = R.id.tvRainInterpretation;
      TextView tvRainInterpretation = ViewBindings.findChildViewById(rootView, id);
      if (tvRainInterpretation == null) {
        break missingId;
      }

      id = R.id.tvRainValue;
      TextView tvRainValue = ViewBindings.findChildViewById(rootView, id);
      if (tvRainValue == null) {
        break missingId;
      }

      id = R.id.tvTemp;
      TextView tvTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvTemp == null) {
        break missingId;
      }

      id = R.id.tvUvInterpretation;
      TextView tvUvInterpretation = ViewBindings.findChildViewById(rootView, id);
      if (tvUvInterpretation == null) {
        break missingId;
      }

      id = R.id.tvUvValue;
      TextView tvUvValue = ViewBindings.findChildViewById(rootView, id);
      if (tvUvValue == null) {
        break missingId;
      }

      id = R.id.tvWeatherMain;
      TextView tvWeatherMain = ViewBindings.findChildViewById(rootView, id);
      if (tvWeatherMain == null) {
        break missingId;
      }

      id = R.id.uvChart;
      CombinedChart uvChart = ViewBindings.findChildViewById(rootView, id);
      if (uvChart == null) {
        break missingId;
      }

      id = R.id.weatherAnimation;
      LottieAnimationView weatherAnimation = ViewBindings.findChildViewById(rootView, id);
      if (weatherAnimation == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, bgImage, drawerLayout,
          headerContainer, infoContainer, navigationView, toolbar, tvHumidityInterpretation,
          tvHumidityValue, tvPollutionInterpretation, tvPollutionValue, tvPressureInterpretation,
          tvPressureValue, tvRainInterpretation, tvRainValue, tvTemp, tvUvInterpretation, tvUvValue,
          tvWeatherMain, uvChart, weatherAnimation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
